# This file is part of shellfire github. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/shellfire-dev/github/master/COPYRIGHT. No part of shellfire github, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2014-2015 The developers of shellfire github. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/shellfire-dev/github/master/COPYRIGHT.


core_usesIn github/api v3
core_usesIn jsonreader
core_usesIn jsonwriter
core_usesIn urlencode

github_api_v3_releases_list()
{
	local owner="$1"
	local repo="$2"
	
	local curl_httpStatusCode
	_github_api_v3_relative_GET "/repos/$(urlencode_pathPiece "$owner")/$(urlencode_pathPiece "$repo")/releases"
	
	if [ $curl_httpStatusCode -ne 200 ]; then
		_github_api_v3_errorMessageExit
	fi
}

github_api_v3_releases_create()
{
	local owner="$1"
	local repo="$2"
	
	local tagName="$3"
	local commitish="$4"
	local name="$5"
	local body="$6"
	local draft="$7"
	local prerelease="$8"
	
	jsonwriter_object \
			string tag_name "$tagName" \
			string target_commitish "$commitish" \
			string name "$name" \
			string body "$body" \
			boolean draft "$draft" \
			boolean prerelease "$prerelease" \
	>"$github_api_v3_requestFilePath"
	
	local curl_httpStatusCode
	_github_api_v3_relative_POST "/repos/$(urlencode_pathPiece "$owner")/$(urlencode_pathPiece "$repo")/releases"
	
	if [ $curl_httpStatusCode -ne 201 ]; then
		_github_api_v3_errorMessageExit
	fi
	
	# Extract the Location header
	curl_iterateHeaders _github_api_v3_extractHeader_Location
	
	github_api_v3_releases_uploadUrlTemplate=''
	_github_api_v3_releases_create_event()
	{
		if jsonreader_eventMatches '/upload_url' string; then
			github_api_v3_releases_uploadUrlTemplate="$eventValue"
		fi
	}
	jsonreader_parse "$github_api_v3_responseFilePath" _github_api_v3_releases_create_event
}

github_api_v3_releases_delete()
{
	local owner="$1"
	local repo="$2"
	local id="$3"
	
	local curl_httpStatusCode
	_github_api_v3_relative_DELETE "/repos/$(urlencode_pathPiece "$owner")/$(urlencode_pathPiece "$repo")/releases/$(urlencode_pathPiece "$id")"
	
	if [ $curl_httpStatusCode -ne 204 ]; then
		_github_api_v3_errorMessageExit
	fi
}

github_api_v3_releases_uploadAsset()
{
	local uploadUrlTemplate="$1"
	local filePath="$2"
	local contentType="$3"
	local label="$4"
	
	local curl_uploadFile="$filePath" 
	local curl_httpStatusCode
	local urlencode_template_variable_name="$(core_compatibility_basename "$filePath")"
	_github_api_v3_absolute_PUT "$(urlencode_template "$uploadUrlTemplate")" 'Content-Type' "$contentType"
	unset curl_uploadFile
	
	if [ $curl_httpStatusCode -ne 201 ]; then
		_github_api_v3_errorMessageExit
	fi
	
	if [ "$label" != "$urlencode_template_variable_name" ]; then
	
		local url=''
		_github_api_v3_releases_uploadAsset_event()
		{
			if jsonreader_eventMatches '/url' string; then
				url="$eventValue"
			fi
		}
		jsonreader_parse "$github_api_v3_responseFilePath" _github_api_v3_releases_uploadAsset_event
		
		jsonwriter_object \
				string name "$urlencode_template_variable_name" \
				string label "$label" \
		>"$github_api_v3_requestFilePath"
		
		_github_api_v3_absolute_PATCH "$url"
		
		if [ $curl_httpStatusCode -ne 200 ]; then
			_github_api_v3_errorMessageExit
		fi
	fi
}